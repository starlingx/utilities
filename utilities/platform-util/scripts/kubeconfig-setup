#!/bin/bash
#
# Copyright (c) 2023,2025 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
# Setups Kubernetes configuration for logged in user.
# No password/token/key is set.
#

# Set Kubernetes config file.
mkdir -p -m 750 $HOME/.kube
rm -f $HOME/.kube/config
touch $HOME/.kube/config
chmod 600 $HOME/.kube/config
CERT_AUTH_DATA=$(base64 -w0 /etc/kubernetes/pki/ca.crt)
CLUSTER_HOST_IP=$(grep -w controller-cluster-host /etc/hosts | awk '{print $1}')
if [[ $CLUSTER_HOST_IP =~ .*:.* ]]; then
    CLUSTER_HOST_IP="[$CLUSTER_HOST_IP]"
fi
SERVER_URL="https://$CLUSTER_HOST_IP:16443"
printf "%s\n" \
       "apiVersion: v1" \
       "clusters:" \
       "- cluster:" \
       "    certificate-authority-data: $CERT_AUTH_DATA" \
       "    server: $SERVER_URL" \
       "  name: kubernetes" \
       "contexts:" \
       "- context:" \
       "    cluster: kubernetes" \
       "    user: $USER" \
       "  name: $USER@kubernetes" \
       "current-context: $USER@kubernetes" \
       "kind: Config" \
       "preferences: {}" \
       "users:" \
       "- name: $USER" \
       "  user:" > $HOME/.kube/config

# Add or replace KUBECONFIG variable in ".profile" file.
VAR_COUNT=$(grep -cw '^export KUBECONFIG' $HOME/.profile)
if [[ "$VAR_COUNT" == "0" ]]; then
    echo 'export KUBECONFIG="$HOME/.kube/config"' >> $HOME/.profile
else
    sed -i '/^\bexport KUBECONFIG\b/c\export KUBECONFIG="$HOME/.kube/config"' $HOME/.profile
fi
